name: CI & CD to NAS Server

on:
  push:
    branches: [ "dev" ]
  workflow_dispatch:

env:
  IMAGE_NAME: myblog
  REGISTRY: docker.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.meta.outputs.short_sha }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Build JAR
        run: ./gradlew clean bootJar -x test

      - name: Get short SHA
        id: meta
        run: echo "short_sha=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.short_sha }}

  deploy-to-nas:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add NAS to known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Create .env file
        run: |
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" > .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "MINIO_URL=${{ secrets.MINIO_URL }}" >> .env
          echo "MINIO_ACCESS_KEY=${{ secrets.MINIO_ACCESS_KEY }}" >> .env
          echo "MINIO_SECRET_KEY=${{ secrets.MINIO_SECRET_KEY }}" >> .env

      - name: Copy .env to NAS
        run: |
          scp -P ${{ secrets.NAS_PORT }} .env ${{ secrets.NAS_USER }}@${{ secrets.NAS_HOST }}:/volume1/web/myblog-backend/.env

      - name: Deploy on NAS
        run: |
          IMAGE=${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.tag }}
          ssh -o StrictHostKeyChecking=no \
              -p ${{ secrets.NAS_PORT }} \
              ${{ secrets.NAS_USER }}@${{ secrets.NAS_HOST }} << EOF
            set -e

            mkdir -p /volume1/web/myblog-backend
            cd /volume1/web/myblog-backend

            echo "Pulling \$IMAGE"
            docker pull \$IMAGE

            echo "Stopping old container"
            docker stop myblog || true
            docker rm   myblog || true

            echo "Running new container"
            docker run -d \
              --name myblog \
              --env-file .env \
              -e SPRING_PROFILES_ACTIVE=dev \
              -p 8080:8080 \
              \$IMAGE

            echo "âœ… Deployed at \$(date)"
          EOF